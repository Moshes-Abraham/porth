// $ ./porth.py com ./checker.porth
// $ ./checker output.ppm
// $ feh ./output.ppm

include "std.porth"

const WIDTH 512 end
const HEIGHT 512 end
const CELL_WIDTH 64 end
const CELL_HEIGHT 64 end
const sizeof(pixel) 3 end

memory canvas sizeof(pixel) WIDTH * HEIGHT * end

proc main in
  argc 2 < if
    "Usage: ./checker <output.ppm>\n" eputs
    "[ERROR] no output file path is provided\n" eputs
    1 exit
  end
  
  0 while dup HEIGHT < do
    0 while dup WIDTH < do
      over over CELL_WIDTH /
      swap CELL_HEIGHT /
      +
      2 %
      0 = if
        over over swap WIDTH * + sizeof(pixel) * canvas +ptr
        dup 255 swap !8 1 ptr+
        dup 0   swap !8 1 ptr+
        dup 255 swap !8 drop
      else
        over over swap WIDTH * + sizeof(pixel) * canvas +ptr
        dup 0   swap !8 1 ptr+
        dup 0   swap !8 1 ptr+
        dup 0   swap !8 drop
      end
      1 +
    end drop
    1 +
  end drop
  
  memory file_path_cstr sizeof(ptr) end
  1 nth_argv file_path_cstr !64
  
  memory fd sizeof(u64) end
  
  "[INFO] Generating "            puts 
  file_path_cstr @ptr cstr-to-str puts 
  "\n"                            puts
  
  420
  O_CREAT O_WRONLY or
  file_path_cstr @ptr
  AT_FDCWD
  openat
  fd !int
  
  fd @int 0 < if
    "[ERROR] could not open file `" eputs
    file_path_cstr @ptr cstr-to-str eputs
    "`\n"                           eputs
    1 exit
  end
  
  "P6\n"   fd @int fputs
  WIDTH    fd @int fputu
  " "      fd @int fputs
  HEIGHT   fd @int fputu
  " 255\n" fd @int fputs
  WIDTH HEIGHT * sizeof(pixel) * canvas fd @int fputs
end
